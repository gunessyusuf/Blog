@model TagModel
@*Generated by ScaffoldApp.*@
@*Model namespace using directive should be added to _ViewImports.cshtml.*@

@{
    ViewData["Title"] = "Create New Tag";
}

<div class="row aligncenter">
    <div class="col-12">
        <form asp-action="Create">
		@Html.AntiForgeryToken()
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="row mb-3">
                <label asp-for="Name" class="col-4 col-form-label"></label>
				<div class="col-8">
					<input asp-for="Name" class="form-control" />
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>
            </div>
            <div class="row mb-3">
				<label asp-for="IsPopular" class="col-4 col-form-label"></label>
				<div class="col-8" style="padding-top: 7px;">
					<input class="form-check-input" asp-for="IsPopular" />
                </div>
            </div>
            <div class="row mb-3">
				<div class="offset-4 col-8">
					<input type="submit" value="Save" class="btn btn-success" />
					&nbsp;&nbsp;
                    <button type="reset" class="btn btn-outline-success">Reset</button>
					&nbsp;&nbsp;
                    <a asp-action="Index" class="btn btn-outline-success">Back to Tag List</a>
				</div>
            </div>
        </form>
    </div>
</div>

@*
	ASP.NET Core MVC'de iki çeşit validation vardır:
	1) Server-Side Validation: Yeni bir controller veya view eklenirken Reference script libraries işaretlenmezse view server side validation
	yapacak şekilde oluşturulur. Yani kullanıcı form üzerinden submit butonuna tıkladığında veriler sunucuya gönderilir ve ilgili action'da
	ModelState.IsValid ile valide edilip validasyon hatası varsa model tekrar view'e gönderilerek view'da varsa validation summary
	veya validation message Tag veya HTML Helper'ları üzerinden bu validasyon hataları gösterilir. Tarayıcının sayfa başlığının da bulunduğu tab'ında
	sayfanın sunucudan tekrar gönderildiği başlığın yanındaki icon'ın değişimi üzerinden takip edilebilir, ayrıca tarayıcının refresh (tazeleme)
	butonunun çarpıya dönmesiyle de sayfanın sunucudan tekrar gönderildiği anlaşılabilir.
	2) Client-Side Validation: Yeni bir controller veya view eklenirken Reference script libraries'in işaretlenmesiyle
	aşağıdaki Views -> Shared -> _ValidationScriptsPartial.cshtml partial view'ı ilgili view'a aşağıdaki şekilde eklenir,
	istenirse bu partial view sonradan da ilgili view'da bulunmuyorsa aşağıdaki şekilde eklenebilir. Bu partial view'in içerisindeki
	Javascript referansları üzerinden tarayıcıda Javascript ile sunucuya veri gönderilmeden view'a gönderilen model üzerinden validation yapılır.
*@
@* 
    Tarayıcı tarafında jQuery üzerinden validasyon yapılması için aşağıdaki Scripts 
    section'ına _ValidationScriptsPartial partial view'ının eklenmesi yeterlidir.
*@
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}


