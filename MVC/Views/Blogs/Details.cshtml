@model BlogModel
@*Generated by ScaffoldApp.*@
@*Model namespace using directive should be added to _ViewImports.cshtml.*@

@{
    ViewData["Title"] = "Blog Details";
}

<div>
    <dl class="row aligncenter">
        <dt class="col-6">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-6">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-6">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class="col-6">
            @Html.DisplayFor(model => model.Content)
        </dd>
        <dt class="col-6">
            @Html.DisplayNameFor(model => model.CreateDateDisplay)
        </dt>
        <dd class="col-6">
            @Html.DisplayFor(model => model.CreateDateDisplay)
        </dd>
        <dt class="col-6">
            @Html.DisplayNameFor(model => model.UpdateDateDisplay)
        </dt>
        <dd class="col-6">
            @Html.DisplayFor(model => model.UpdateDateDisplay)
        </dd>
        <dt class="col-6">
            @Html.DisplayNameFor(model => model.ScoreDisplay)
        </dt>
        <dd class="col-6">
            @Html.DisplayFor(model => model.ScoreDisplay)
        </dd>
        <dt class="col-6">
            @Html.DisplayNameFor(model => model.UserNameDisplay)
        </dt>
        <dd class="col-6">
            @Html.DisplayFor(model => model.UserNameDisplay)
        </dd>
        <dt class="col-6">
            @Html.DisplayNameFor(model => model.TagsDisplay)
        </dt>
        <dd class="col-6">

            @* Many to Many ilişkili kayıtları getirme 1. yöntem: *@
            @{
                string tags = "";
                string seperator = "<br />";
                foreach (var tagDisplay in Model.TagsDisplay)
                {
                    tags += tagDisplay.Name + seperator;
                }
                tags = tags.TrimEnd(seperator.ToCharArray());
            }
            @Html.Raw(tags) @* Html.Raw helper'ı içerisinde HTML tag olan string'ler için kullanılır *@

            @* Many to Many ilişkili kayıtları getirme 2. yöntem: *@
            @* @Html.Raw(Model.TagsDisplay) *@

        </dd>

        <dt class="col-6">
            @Html.DisplayNameFor(model => model.ImgSrcDisplay)
        </dt>
        <dd class="col-6">
            @if (Model.ImgSrcDisplay is not null)
            {
                <img src="@Model.ImgSrcDisplay" class="img-fluid" />
            }
            else
            {
                <i class="fa-regular fa-image" title="No Image"></i>
            }
        </dd>

    </dl>
</div>

<hr />
<div class="text-center">
    <p>
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>&nbsp;|&nbsp;
        <a asp-action="Index">Back to Blog List</a>
    </p>
</div>